name: Publish Docker Images

on:
  workflow_call:
    inputs:
      version:
        description: 'Release version Format: x.y.z-[alpha|beta|pre].n'
        required: true
        type: string
      pre_release:
        description: 'Is this a pre-release?'
        required: false
        default: "false"
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version Format: x.y.z-[alpha|beta|pre].n'
        required: true
        type: string
      pre_release:
        description: 'Is this a pre-release?'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: leicraft/passbolt-with-backups

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        shell: bash
        run: bun install
      
      - name: Build Binary
        run: bun compile linux-x64-baseline ${{ inputs.version }} --no-version-tag
      
      - name: Setup Docker
        id: docker-setup
        uses: ./.github/workflows/docker-setup
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ env.IMAGE_NAME }}

      - name: Build and push Base Image
        uses: ./.github/workflows/docker-build-and-push
        with:
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          image-tag-suffix: -base
          dockerfile: Dockerfile.base
          labels: ${{ steps.docker-setup.outputs.labels }}
          version: ${{ inputs.version }}
          pre_release: ${{ inputs.pre_release }}

      - name: Build and push MySQL Image
        uses: ./.github/workflows/docker-build-and-push
        with:
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          image-tag-suffix: -mysql
          dockerfile: Dockerfile.mysql
          labels: ${{ steps.docker-setup.outputs.labels }}
          version: ${{ inputs.version }}
          pre_release: ${{ inputs.pre_release }}

      - name: Build and push Postgres Image
        uses: ./.github/workflows/docker-build-and-push
        with:
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          image-tag-suffix: -postgres
          dockerfile: Dockerfile.postgres
          labels: ${{ steps.docker-setup.outputs.labels }}
          version: ${{ inputs.version }}
          pre_release: ${{ inputs.pre_release }}

